:mod:`picklemagic` --- Pickle data extraction
=============================================

.. module:: picklemagic

The :mod:`picklemagic` module implements tools for extracting data serialized in the python pickle format.

Technical Background
--------------------

todo

Faking classes
^^^^^^^^^^^^^^

todo

Faking Modules
^^^^^^^^^^^^^^

todo

Security Risks
^^^^^^^^^^^^^^

While :class:`SafeUnpickler` secures the unpickling process by denying the process
access to globals and objects in modules by replacing the wanted definitions with
fake classes which cannot do any harm, there are other possible security risks in
the pickle protocol. These vulnerabilities are persistent ideas and the pickle
extension registry. Although :class:`SafeUnpickler` allows subclassing of
:meth:`SafeUnpickler.persistent_id`, care should be taken that the objects returned
by it cannot be used for anything harmful. The same goes for the pickle extension
registry if enabled (documented in the Python :mod:`copyreg` module).

Module Interface
----------------

To simply analyze a pickle string, you can simply call :func:`load` or
:func:`safe_load`. Similarly if you want to analyze a pickle data stream, you
can call the :func:`loads` and :func:`safe_loads` functions. However if you
want more control over the missing class faking process, you can control
FakeClass creation directly using :class:`FakeClassFactory` and by subclassing
:class:`FakeClassType`. For more control over the unpickling process itself the
classes :class:`FakeUnpickler` and :class:`SafeUnpickler` can be used directly.

The :mod:`picklemagic` module provides the following functions to make simple
use more convenient

.. autofunction:: load

.. autofunction:: safe_load

.. autofunction:: loads

.. autofunction:: safe_loads

To ease automatic analysis, the :mod:`picklemagic` module provides the
following functions.

.. autofunction:: fake_package

.. autofunction:: remove_fake_package

The :mod:`picklemagic` module defines this Exception:

.. autoexception:: FakeUnpicklingError

Fake Classes
^^^^^^^^^^^^

The :mod:`picklemagic` module uses the following classes to provide the necessary
fake class definitions required by the fake unpickling process.

.. autoclass:: FakeClassType(name, bases, dict)

.. autoclass:: FakeClassFactory(special_cases, errors='strict', fake_metaclass=FakeClassType, default_bases=(object,))
   :members: __call__

Fake Modules
^^^^^^^^^^^^

The :mod:`picklemagic` module uses the following classees to implement the fake
modules generated by :func:`fake_package` and the fake unpickling process.

.. autoclass:: FakeModule
   :members: _remove

.. autoclass:: FakePackage

.. autoclass:: FakePackageLoader

Fake Unpicklers
^^^^^^^^^^^^^^^

These two classes do the actual work behind the fake unpickling process. 

.. autoclass:: FakeUnpickler

.. autoclass:: SafeUnpickler